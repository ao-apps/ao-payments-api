<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-credit-cards-api - Credit card processing API supporting multiple payment gateways.
Copyright (C) 2016, 2017, 2019, 2020, 2021  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-credit-cards-api.

ao-credit-cards-api is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-credit-cards-api is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-credit-cards-api.  If not, see <http://www.gnu.org/licenses />.
-->
<jsp:root
	xmlns:ao="https://aoindustries.com/ao-taglib/"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:changelog="https://semanticcms.com/changelog/taglib/"
	xmlns:core="https://semanticcms.com/core/taglib/"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	version="2.1"
>
	<jsp:directive.page language="java" pageEncoding="UTF-8" />
	<jsp:directive.page session="false" />
	<core:page
		title="@{documented.name} Changelog"
		shortTitle="Changelog"
		tocLevels="1"
		datePublished="2016-10-29T18:13:01-05:00"
		dateModified="2021-05-26T06:36:49-05:00"
	>
		<c:if test="${fn:endsWith('@{project.version}', '-SNAPSHOT') and !fn:endsWith('@{project.version}', '-POST-SNAPSHOT')}">
			<changelog:release
				projectName="@{documented.name}"
				version="@{project.version}"
				groupId="@{project.groupId}"
				artifactId="@{documented.artifactId}"
				scmUrl="@{project.scm.url}"
			>
				<ul>
					<li>Minimum Java version changed from 1.8 to 11.</li>
					<!-- TODO:
					<li>A CreditCard replacement log, logging all automatic replacements, both manual and automatic?</li>
					<li>
						Version 2.0: Have a constructor given a mapping of String->String (or Properties) as configuration,
						or use a builder pattern with JavaBeans pattern setters.
					</li>
					-->
				</ul>
			</changelog:release>
		</c:if>

		<changelog:release
			projectName="@{documented.name}"
			version="1.3.1"
			datePublished="2021-02-09T09:11:42-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Fixed typo in constants <code>UNKNOWN_EXPRIATION_MONTH</code> and <code>UNKNOWN_EXPRIATION_YEAR</code>.</li>
				<li><code>CreditCard.setMaskedCardNumber(String)</code> is now public.</li>
				<li><code>TransactionRequest.DEFAULT_DUPLICATE_WINDOW</code> is now public.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.3.0"
			datePublished="2020-12-11T11:45:11-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					Defined <ao:a href="https://en.wikipedia.org/wiki/SQLSTATE">SQLSTATE</ao:a> values for all
					<ao:a rel="nofollow" href="@{javadoc.link.javase}java/sql/SQLException.html">SQLException</ao:a>.
				</li>
				<li>
					Split development-only classes into a new sub-project in <code>devel/</code>.  This
					sub-project is used only for development and is never deployed to artifact repositories.
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.2.0"
			datePublished="2020-11-29T05:14:47-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Resolved editor warnings.</li>
				<li>
					<p>
						Now registering exception types for use with <code>Throwables.newSurrogate(â€¦)</code> that supports creating new instances
						of throwables in order to have caller stack trace.  When wrapped, the original throwable is the
						cause of the new throwable.  When not wrapped, the original throwable is used directly and
						caller stack trace is lost.
					</p>
					<p>
						This is used to maintain exception types and states across thread boundaries, such as when an exception cause
						is obtained from an <code>ExecutionException</code>.
					</p>
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.3"
			datePublished="2020-06-11T05:14:17-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					Fixed French translations properly encode <code>'</code> as <code>''</code> inside
					resource bundles.
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.2"
			datePublished="2020-03-28T03:57:59-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Minimum Java version changed from 1.7 to 1.8.</li>
				<li>
					Reduced use of property substitutions in <code>pom.xml</code>.
					This is to help 3rd-party parsers that fail to perform full Maven-compatible substitutions.
				</li>
				<li>Updated dependencies.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.0"
			datePublished="2019-06-20T23:27:57-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Minimum Java version changed from 1.6 to 1.7.</li>
				<li>New error code: <ao:a href="apidocs/com/aoindustries/creditcards/TransactionResult.ErrorCode.html#RATE_LIMIT">TransactionResult.ErrorCode.RATE_LIMIT</ao:a>.</li>
				<li>Finished delayed capture persistence implementation.</li>
				<li>
					Masked card numbers now keep up to the first six digits instead of only four.
					The number of first digits kept may be lower, depending on card type.
					This allows for more complete card type determination per
					<ao:a href="https://wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_.28IIN.29">Issuer identification number (IIN)</ao:a>.
				</li>
				<li>
					Authorization results now include an optional replacement masked card number.
					This facilitates the handling of card details that are updated by a provider.
					When updated, the new masked card number is persisted.
					The persisted value is then used to correctly represent the stored card to the user.
				</li>
				<li>
					New function <ao:a href="apidocs/com/aoindustries/creditcards/CreditCard.html#getCardNumberDisplay-java.lang.String-">CreditCard.getCardNumberDisplay(String)</ao:a>
					to format masked card numbers for display.
				</li>
				<li>
					Fixed <ao:a href="apidocs/com/aoindustries/creditcards/CreditCard.html#setCustomerTaxId-java.lang.String-">CreditCard.setCustomerTaxId(String)</ao:a>
					to validate argument as documented.
				</li>
				<li>
					Card <code>expirationMonth</code> and <code>expirationYear</code> are now persisted and remain available for display.
					Previously, the expiration dates were only sent off to the payment processor.
					Payment processors may also provide replacement expiration date in the same fashion as the replacement masked card number.
				</li>
				<li>
					New function <ao:a href="apidocs/com/aoindustries/creditcards/CreditCard.html#getExpirationDisplay-java.lang.Byte-java.lang.Short-">CreditCard.getExpirationDisplay(Byte,Short)</ao:a>
					to format expiration dates for display.
				</li>
				<li>Increased maximum future card expiration year from +12 years to +20 years.</li>
				<li>Added SQL implementation in alternate "sql" classifier.</li>
				<li>
					Persistent storage may now be synchronized against the provider in the background, allowing replacement masked card numbers and expirations
					to be persisted in a timely manner.  This is in addition to the replacement values made available during authorization.
				</li>
				<li>Using managed dependencies:
					<ol>
						<li>This project uses managed dependencies.</li>
						<li>This project's managed dependencies may also be imported by other projects.</li>
					</ol>
				</li>
				<li>Please note: the next major release of this project will be renamed to <code>ao-payment-api</code>.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.3"
			datePublished="2017-07-20T00:43:09-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Updated dependencies.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.2"
			datePublished="2016-11-15T21:55:29-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>New <core:link book="/ao-oss-parent" page="/index.jspx" /> POM to simplify <code>pom.xml</code> files.</li>
				<li>Project documentation moved to per-project book in <ao:a href="https://semanticcms.com/">SemanticCMS</ao:a> format.</li>
				<li>Added changelog as top-level project link.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.1"
			datePublished="2016-10-20T18:18:00-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Improved Javadoc formatting.</li>
				<li>Improved README formatting.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.0"
			datePublished="2016-10-06T12:34:00-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Project moved to GitHub and Maven.</li>
			</ul>
		</changelog:release>
	</core:page>
</jsp:root>
